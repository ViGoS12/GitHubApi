{"version":3,"file":"static/js/872.377477ef.chunk.js","mappings":"kKAOMA,EAA6B,SAAH,GAA6B,IAAvBC,EAAI,EAAJA,KAAMC,EAAS,EAATA,UAC1C,OAAO,eAAIA,UAAWA,EAAU,SAAED,GACpC,ECRA,GDUeE,EAAAA,EAAAA,MAAKH,GEFdI,EAA+B,SAAH,GAA4C,IAAtCC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAC5D,OACE,8BACE,kBAAOL,UAAU,uCAAsC,UACrD,wBACGG,EAASG,KAAI,SAACC,GACb,OAAO,SAAC,EAAI,CAAWR,KAAMQ,EAAKP,UAAWI,GAA3BG,EACpB,SAGJ,2BAAQF,MAGd,ECrBA,GDuBeJ,EAAAA,EAAAA,MAAKC,E,8EExBb,IAAMM,EAAgB,CAC3B,OACA,uBACA,cACA,SAGWC,EAAgB,CAAC,SAAU,MAAO,O,0HC2D/C,UArDmB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA+BC,EAAAA,EAAAA,MAAvBC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAEZC,GAAWC,EAAAA,EAAAA,KACTC,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,IAAI,IAAzDH,UAURI,EAAAA,EAAAA,YAAU,WALJR,GAAYC,GACdC,GAASO,EAAAA,EAAAA,IAAU,CAAET,SAAAA,EAAUC,SAAAA,IAMnC,GAAG,CAACD,EAAUC,IAOd,OACE,iCACE,gBAAKd,UAAU,sBAAqB,UAClC,SAAC,IAAM,CAACuB,QApBC,WAAH,OAASb,GAAU,EAAE,EAoBH,wBAE1B,gBAAKV,UAAU,yBAAwB,UACrC,iBAAKA,UAAU,sBAAqB,WAClC,iBAAKA,UAAU,UAAS,yBAAcc,MACtC,SAAC,IAAK,CACJX,SAAUM,EAAAA,EACVL,WAAW,2CAA0C,SACpDa,EAASX,KAAI,gBAhBJkB,EAgBOC,EAAG,EAAHA,IAAKC,EAAM,EAANA,OAAM,OAC1B,gBAAc1B,UAAU,wCAAuC,WAC7D,eAAIA,UAAU,+BAA8B,SACzC0B,EAAOC,OAAOC,QAEjB,eAAI5B,UAAU,+BAA8B,SAAEyB,KAC9C,eAAIzB,UAAU,+BAA8B,UAtBtCwB,EAuBQE,EAAOC,OAAOH,KAtBzB,IAAIK,KAAKA,KAAKC,MAAMN,EAAKO,aAC1BC,sBAeKP,EAQJ,aAOnB,C","sources":["components/table/components/head/Head.tsx","components/table/components/head/index.ts","components/table/Table.tsx","components/table/index.ts","constants/index.ts","pages/Repository.tsx"],"sourcesContent":["import { memo } from 'react'\r\n\r\ninterface IHeadProps {\r\n  item: string\r\n  className?: string\r\n}\r\n\r\nconst Head: React.FC<IHeadProps> = ({ item, className }) => {\r\n  return <th className={className}>{item}</th>\r\n}\r\n\r\nexport default memo(Head)\r\n","import Head from './Head'\r\nexport default Head\r\n","import Head from './components/head'\r\nimport { ReactNode, memo } from 'react'\r\n\r\ninterface ITableProps {\r\n  tHeadCol: string[]\r\n  cnTHeadCol?: string\r\n  children: ReactNode\r\n}\r\n\r\nconst Table: React.FC<ITableProps> = ({ tHeadCol, cnTHeadCol, children }) => {\r\n  return (\r\n    <table>\r\n      <thead className=' border border-solid border-divider '>\r\n        <tr>\r\n          {tHeadCol.map((col) => {\r\n            return <Head key={col} item={col} className={cnTHeadCol}></Head>\r\n          })}\r\n        </tr>\r\n      </thead>\r\n      <tbody>{children}</tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default memo(Table)\r\n","import Table from './Table'\r\nexport default Table\r\n","export const THEADCOL_USER = [\r\n  'Name',\r\n  'Programming language',\r\n  'Description',\r\n  'Stars',\r\n]\r\n\r\nexport const THEADCOL_REPO = ['Author', 'Sha', 'Date']\r\n","import { useSelector } from 'react-redux'\r\nimport { RootState, useAppDispatch } from '../redux/store'\r\n\r\nimport { fetchRepo } from './../redux/slices/repoSlice'\r\n\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\n\r\nimport Table from './../components/table/'\r\n\r\nimport { THEADCOL_REPO } from '../constants'\r\nimport Button from '../shared/UI/button'\r\n\r\nconst Repository = () => {\r\n  const navigate = useNavigate()\r\n  const { userName, repoName } = useParams()\r\n\r\n  const dispatch = useAppDispatch()\r\n  const { repoInfo } = useSelector((state: RootState) => state.repo)\r\n\r\n  const goBack = () => navigate(-1)\r\n\r\n  const getRepoInfo = () => {\r\n    if (userName && repoName) {\r\n      dispatch(fetchRepo({ userName, repoName }))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRepoInfo()\r\n  }, [userName, repoName])\r\n\r\n  const formatDate = (date: Date) => {\r\n    const myDate = new Date(Date.parse(date.toString()))\r\n    return myDate.toLocaleString()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='flex h-10 mx-5 mt-1'>\r\n        <Button onClick={goBack}>Go back</Button>\r\n      </div>\r\n      <div className='mx-auto max-w-[1280px]'>\r\n        <div className='flex flex-col gap-3'>\r\n          <div className='text-lg'>Repository: {repoName}</div>\r\n          <Table\r\n            tHeadCol={THEADCOL_REPO}\r\n            cnTHeadCol='text-sm font-medium  px-6 py-1 text-left'>\r\n            {repoInfo.map(({ sha, commit }) => (\r\n              <tr key={sha} className='border-solid border-b border-divider '>\r\n                <td className='text-sm font-light px-6 py-2'>\r\n                  {commit.author.name}\r\n                </td>\r\n                <td className='text-sm font-light px-6 py-2'>{sha}</td>\r\n                <td className='text-sm font-light px-6 py-2'>\r\n                  {formatDate(commit.author.date)}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Repository\r\n"],"names":["Head","item","className","memo","Table","tHeadCol","cnTHeadCol","children","map","col","THEADCOL_USER","THEADCOL_REPO","navigate","useNavigate","useParams","userName","repoName","dispatch","useAppDispatch","repoInfo","useSelector","state","repo","useEffect","fetchRepo","onClick","date","sha","commit","author","name","Date","parse","toString","toLocaleString"],"sourceRoot":""}